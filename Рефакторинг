using System;
class Program
{
    static void Main()
    {
        // Считываем количество точек
        int kolvoTochek = Convert.ToInt32(Console.ReadLine());

        // Массив для хранения данных о четвертях
        // Каждый элемент содержит: (количество точек, минимальное расстояние, координаты точки)
        (int schetchik, int minRasstoyanie, (int x, int y) tochka)[] dannyeChetverti = new (int schetchik, int minRasstoyanie, (int x, int y) tochka)[4];

        // Инициализируем массив
        for (int i = 0; i < 4; i++)
        {
            dannyeChetverti[i] = (0, int.MaxValue, (0, 0));
        }

        // Обработка входных данных
        for (int i = 0; i < kolvoTochek; i++)
        {
            // Считываем координаты точки
            string[] koord = Console.ReadLine().Split();
            int xKoord = Convert.ToInt32(koord[0]);
            int yKoord = Convert.ToInt32(koord[1]);

            // Пропускаем точки на осях координат
            if (xKoord == 0 || yKoord == 0)
                continue;

            // Определяем номер четверти (0 - первая, 1 - вторая, 2 - третья, 3 - четвертая)
            int nomerChetverti = -1;
            if (xKoord > 0 && yKoord > 0) nomerChetverti = 0;
            else if (xKoord < 0 && yKoord > 0) nomerChetverti = 1;
            else if (xKoord < 0 && yKoord < 0) nomerChetverti = 2;
            else if (xKoord > 0 && yKoord < 0) nomerChetverti = 3;

            if (nomerChetverti != -1)
            {
                // Расстояние до ближайшей оси
                int rasstoyanieDoOsi = Math.Min(Math.Abs(xKoord), Math.Abs(yKoord));

                // Обновляем данные о четверти
                (int schetchik, int minRasstoyanie, (int x, int y) tochka) tekushayaChetvert = dannyeChetverti[nomerChetverti];
                if (rasstoyanieDoOsi < tekushayaChetvert.minRasstoyanie ||
                    (rasstoyanieDoOsi == tekushayaChetvert.minRasstoyanie && tekushayaChetvert.tochka == (0, 0)))
                {
                    dannyeChetverti[nomerChetverti] = (tekushayaChetvert.schetchik + 1, rasstoyanieDoOsi, (xKoord, yKoord));
                }
                else
                {
                    dannyeChetverti[nomerChetverti] = (tekushayaChetvert.schetchik + 1, tekushayaChetvert.minRasstoyanie, tekushayaChetvert.tochka);
                }
            }
        }

        // Поиск лучшей четверти
        int luchshayaChetvert = -1;
        int maxSchetchik = -1;
        int minRasstoyanieDoOsi = int.MaxValue;

        for (int i = 0; i < 4; i++)
        {
            (int schetchik, int minRasstoyanie, (int x, int y) tochka) chetvert = dannyeChetverti[i];
            if (chetvert.schetchik > maxSchetchik ||
                (chetvert.schetchik == maxSchetchik && chetvert.minRasstoyanie < minRasstoyanieDoOsi) ||
                (chetvert.schetchik == maxSchetchik && chetvert.minRasstoyanie == minRasstoyanieDoOsi && i < luchshayaChetvert))
            {
                luchshayaChetvert = i;
                maxSchetchik = chetvert.schetchik;
                minRasstoyanieDoOsi = chetvert.minRasstoyanie;
            }
        }

        // Вывод результатов
        if (luchshayaChetvert != -1)
        {
            (int schetchik, int minRasstoyanie, (int x, int y) tochka) resultat = dannyeChetverti[luchshayaChetvert];
            int nomerChetverti = luchshayaChetvert + 1; // Переводим индекс в номер четверти
            Console.WriteLine($"K = {nomerChetverti}");
            Console.WriteLine($"M = {resultat.schetchik}");
            Console.WriteLine($"A = ({resultat.tochka.x}, {resultat.tochka.y})");
            Console.WriteLine($"R = {resultat.minRasstoyanie}");
        }
        else
        {
            Console.WriteLine("Net podhodyashchikh tochek");
        }
    }
}
